version: "3.9"

networks:
  backend:
    name: "network_${APP_NAME}"

services:
  nginx:
    image: "nginx:${NGINX_IMAGE}"
    container_name: "webserver_${APP_NAME}"
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./src:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php
      - mysql
      - mssqlserver
    networks:
      - backend

  php:
    container_name: "php_fpm_${APP_NAME}"
    build:
      context: .
      args:
        - PHP_VERSION=${PHP_VERSION}
      dockerfile: .docker/php-fpm/Dockerfile
    volumes:
      - ./src:/var/www/html
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - backend

  mysql:
    image: "mysql:${MYSQL_VERSION}"
    container_name: "db_mysql_${APP_NAME}"
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - backend

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:${MSSQLSERVER_IMAGE}"
    container_name: "db_mssqlserver_${APP_NAME}"
    restart: unless-stopped
    tty: true
    ports:
      - "${MSSQLSERVER_PORT}:1433"
    volumes:
      - ./data/mssql:/var/opt/mssql/data
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_PID: Express 
    networks:
      - backend

  redis:
    container_name: "redis_db_${APP_NAME}"
    build:
      context: .
      args:
        - REDIS_VERSION=${REDIS_VERSION}
      dockerfile: .docker/redis/Dockerfile
    volumes:
      - ./data/redis:/data
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend