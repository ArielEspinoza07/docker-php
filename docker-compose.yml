version: "3.9"

networks:
  csi-api-network:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: webserver_csi_api
    ports:
      - "5000:80"
    volumes:
      - ./src:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php
      - mysql
      - mssqlserver
    networks:
      - csi-api-network

  php:
    container_name: php_fpm_csi_api
    build:
      context: .
      dockerfile: .docker/php-fpm/Dockerfile
    volumes:
      - ./src:/var/www/html
    ports:
      - "9005:9000"
    networks:
      - csi-api-network

  mysql:
    image: mysql:8.0.31
    container_name: database_mysql
    restart: unless-stopped
    tty: true
    ports:
      - "4307:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: csi_api_db
      MYSQL_USER: csi_api_user
      MYSQL_PASSWORD: 12345678
      MYSQL_ROOT_PASSWORD: admin
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - csi-api-network

  mssqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: database_mssqlserver
    restart: unless-stopped
    tty: true
    ports:
      - "1434:1433"
    volumes:
      - ./data/mssql:/var/opt/mssql/data
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: S0u13t3r07@PWD
      MSSQL_PID: Express 
    networks:
      - csi-api-network

  redis:
    container_name: redis_db_csi_api
    build:
      context: .
      dockerfile: .docker/redis/Dockerfile
    volumes:
      - ./data/redis:/data
    restart: unless-stopped
    ports:
      - "6385:6379"
    networks:
      - csi-api-network